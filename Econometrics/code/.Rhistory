setwd("C:/Users/Lenovo/Desktop")
data7 <- rio::import("caschool.dta")
view(data7)
colnames(data7)
model7 <- lm(testscr - str, data = data7)
summary(model7)
lgwage <- c(
2.933567,
2.942207,
2.820629,
2.473392,
1.452585,
2.870499,
2.670823,
2.052554,
2.028668,
3.628742)
schyear <- c(
15,
9,
11,
9,
9,
6,
9,
4,
12,
15
)
data5 <- data.frame(lgwage,schyear)
View(data5)
model2 <- lm(lgwage ~ schyear, data = data5)
summary(model2)
β1 <- sum((data5$lgwage - mean(data5$lgwage))*(data5$schyear - mean(data5$schyear)))/
sum((data5$schyear - mean(data5$schyear))*(data5$schyear - mean(data5$schyear)))
β1
β0 <- mean(data5$lgwage) - β1*mean(data5$schyear)
β0
library(rio)
library(tidyverse)
setwd("C:\Users\Lenovo\Desktop\")
setwd("C:/Users/Lenovo/Desktop/")
data6 <- rio::import("wg88.dta")
View(data6)
data6 <- data6 %>%
mutate(constant = 1)
X <- as.matrix(data6[,c("constant","schyear","asex","cp","exper","expsq","minor",
"ow2","ow3","ow4","ow5",
"oc2","oc3","oc4",
"sec1","sec3","sec4","sec5","sec6","sec7","sec8",
"sec9","sec10","sec11","sec12",
"zprvn11","zprvn14","zprvn21","zprvn34","zprvn41","zprvn42",
"zprvn44","zprvn53","zprvn62")])
Y <- as.matrix(data6[,c("lgwg88c")])
b <- solve(t(X)%*%X)%*%(t(X)%*%Y)
data7 <- rio::import("caschool.dta")
View(data7)
colnames(data7)
model7 <- lm(testscr ~ str, data = data7)
summary(model7)
β1 <- sum((data7$testscr - mean(data7$testscr))*(data7$str - mean(data7$str)))/
sum((data7$str - mean(data7$str))*(data7$str - mean(data7$str)))
β1
β0 <- mean(data7$testscr) - β1*mean(data7$str)
β0
R2 <- sum(((β0+β1*data7$str)-mean(data7$testscr))*((β0+β1*data7$str)-mean(data7$testscr)))/
sum((data7$testscr-mean(data7$testscr))*(data7$testscr-mean(data7$testscr)))
R2
adjR2 <- 1 - (1-R2)*(length(data7$testscr)-1)/(length(data7$testscr)-2)
adjR2
clear
use caschool.dta
graph twoway scatter (testscr str) || (lfit testscr str) || (lowess testscr str)
data <- read.csv("data_pums_2000.csv")
head(data)
library(ggplot2)
head(data)
library(ggplot2)
library(ggplot2)
sorted_data <- data[order(data$INCTOT), ]
head(data)
library(ggplot2)
sorted_data <- data[order(data$INCTOT), ]
head(data)
head(sorted_data)
total_income <- sum(sorted_data$INCTOT)
n <- nrow(sorted_data)
cumulative_population <- cumsum(rep(1/n, n))
cumulative_income <- cumsum(sorted_data$income) / total_income
lorenz_data <- data.frame(
cumulative_population,
cumulative_income
)
cumulative_population <- cumsum(rep(1/n, n))
cumulative_income <- cumsum(sorted_data$INCTOT) / total_income
lorenz_data <- data.frame(
cumulative_population,
cumulative_income
)
ggplot(lorenz_data, aes(x = cumulative_population, y = cumulative_income)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "blue", size = 2) +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(title = "Lorenz Curve", x = "Cumulative Population", y = "Cumulative Income") +
theme_minimal()
summary(lorenz_data$cumulative_population)
summary(lorenz_data$cumulative_income)
data <- read.csv("data_pums_2000.csv")
head(data)
library(ggplot2)
sorted_data <- data[order(data$INCTOT), ]
sum(is.na(data$income))
sorted_data <- data[order(data$INCTOT), ]
sum(is.na(sorted_data$INCTOT))
cumulative_population <- cumsum(rep(1/n, n))
cumulative_income <- cumsum(sorted_data$INCTOT) / total_income
end(cumulative_income)
data <- read.csv("data_pums_2000.csv")
head(data)
library(ggplot2)
sorted_data <- data[order(data$INCTOT), ]
sum(is.na(sorted_data$INCTOT))
total_income <- sum(sorted_data$INCTOT)
n <- nrow(sorted_data)
cumulative_population <- cumsum(rep(1/n, n))
cumulative_income <- cumsum(sorted_data$INCTOT) / total_income
end(cumulative_income)
lorenz_data <- data.frame(
cumulative_population,
cumulative_income
)
ggplot(lorenz_data, aes(x = cumulative_population, y = cumulative_income)) +
geom_line(color = "blue", linewidth = 1) +
geom_point(color = "blue") +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(title = "Lorenz Curve", x = "Cumulative Population", y = "Cumulative Income") +
theme_minimal()
summary(lorenz_data$cumulative_population)
summary(lorenz_data$cumulative_income)
cumulative_population <- cumsum(rep(1/n, n))
cumulative_income <- cumsum(as.numeric(sorted_data$INCTOT)) / total_income
end(cumulative_income)
lorenz_data <- data.frame(
cumulative_population,
cumulative_income
)
ggplot(lorenz_data, aes(x = cumulative_population, y = cumulative_income)) +
geom_line(color = "blue", linewidth = 1) +
geom_point(color = "blue") +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(title = "Lorenz Curve", x = "Cumulative Population", y = "Cumulative Income") +
theme_minimal()
summary(lorenz_data$cumulative_population)
summary(lorenz_data$cumulative_income)
load("C:/Users/Lenovo/Desktop/.RData")
# 计算基尼系数的函数
calculate_gini <- function(income) {
n <- length(income)
sorted_income <- sort(income)
cumulative_income <- cumsum(sorted_income)
total_income <- sum(sorted_income)
cumulative_income_ratio <- cumulative_income / total_income
cumulative_population_ratio <- (1:n) / n
gini_area <- sum((cumulative_income_ratio[-1] - cumulative_income_ratio[-n]) * (cumulative_population_ratio[-1] + cumulative_population_ratio[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_coefficient)
}
# 计算基尼系数
gini_coefficient <- calculate_gini(data$income)
print(paste("Gini Coefficient:", gini_coefficient))
# 计算基尼系数
gini_coefficient <- calculate_gini(data$INCTOT)
print(paste("Gini Coefficient:", gini_coefficient))
# 计算基尼系数的函数
calculate_gini <- function(income) {
n <- length(income)
sorted_income <- sort(income)
cumulative_income <- cumsum(as.numeric(sorted_income))
total_income <- sum(sorted_income)
cumulative_income_ratio <- cumulative_income / total_income
cumulative_population_ratio <- (1:n) / n
gini_area <- sum((cumulative_income_ratio[-1] - cumulative_income_ratio[-n]) * (cumulative_population_ratio[-1] + cumulative_population_ratio[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_coefficient)
}
# 计算基尼系数
gini_coefficient <- calculate_gini(data$INCTOT)
print(paste("Gini Coefficient:", gini_coefficient))
# 计算基尼系数的函数
calculate_gini <- function(income) {
n <- length(income)
sorted_income <- sort(income)
cumulative_income <- cumsum(as.numeric(sorted_income))
total_income <- sum(sorted_income)
cumulative_income_ratio <- cumulative_income / total_income
cumulative_population_ratio <- (1:n) / n
gini_area <- sum((cumulative_income_ratio[-1] - cumulative_income_ratio[-n]) * (cumulative_population_ratio[-1] + cumulative_population_ratio[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_coefficient)
}
# 计算基尼系数
gini_coefficient <- calculate_gini(data$INCTOT)
print(paste("Gini Coefficient:", gini_coefficient))
# 计算基尼系数的函数
calculate_gini <- function(income) {
n <- length(income)
sorted_income <- sort(income)
cumulative_income <- cumsum(as.numeric(sorted_income))
total_income <- sum(sorted_income)
cumulative_income_ratio <- cumulative_income / total_income
cumulative_population_ratio <- (1:n) / n
gini_area <- sum((cumulative_income_ratio[-1] - cumulative_income_ratio[-n]) * (cumulative_population_ratio[-1] + cumulative_population_ratio[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_area)
}
# 计算基尼系数
gini_area <- calculate_gini(data$INCTOT)
print(paste("Gini area:", gini_area))
# 计算基尼系数的函数
calculate_gini <- function(income,cumulative_population,cumulative_income) {
n <- length(income)
sorted_income <- sort(income)
cumulative_income <- cumsum(as.numeric(sorted_income))
total_income <- sum(sorted_income)
cumulative_income_ratio <- cumulative_income / total_income
cumulative_population_ratio <- (1:n) / n
gini_area <- sum((cumulative_income_ratio[-1] - cumulative_income_ratio[-n]) * (cumulative_population_ratio[-1] + cumulative_population_ratio[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_area)
}
# 计算基尼系数的函数
calculate_gini <- function(cumulative_population,cumulative_income) {
gini_area <- sum((cumulative_income[-1] - cumulative_income[-n]) * (cumulative_population[-1] + cumulative_population[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_area)
}
# 计算基尼系数
gini_area <- calculate_gini(data$INCTOT)
# 计算基尼系数
gini_area <- calculate_gini(cumulative_population,cumulative_income)
print(paste("Gini area:", gini_area))
# gini_coefficient <- calculate_gini(data$INCTOT)
# gini_coefficient <- calculate_gini(data$INCTOT)
# print(paste("Gini Coefficient:", gini_coefficient))
# 计算基尼系数的函数
calculate_gini <- function(cumulative_population,cumulative_income) {
gini_area <- sum((cumulative_income[-1] - cumulative_income[-n]) * (cumulative_population[-1] - cumulative_population[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_area)
}
# 计算基尼系数
gini_area <- calculate_gini(cumulative_population,cumulative_income)
print(paste("Gini area:", gini_area))
# 计算基尼系数的函数
calculate_gini <- function(cumulative_population,cumulative_income) {
gini_area <- sum((cumulative_income[-1] - cumulative_income[-n]) * (cumulative_population[-1] + cumulative_population[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_area)
}
# 计算基尼系数
gini_area <- calculate_gini(cumulative_population,cumulative_income)
print(paste("Gini area:", gini_area))
# 计算基尼系数的函数
calculate_gini <- function(cumulative_population,cumulative_income) {
gini_area <- sum((cumulative_income) * (cumulative_population[-1] - cumulative_population[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_area)
}
# 计算基尼系数
gini_area <- calculate_gini(cumulative_population,cumulative_income)
return(gini_area)
# 计算基尼系数的函数
calculate_gini <- function(cumulative_population,cumulative_income) {
gini_area <- sum((cumulative_income[-1]) * (cumulative_population[-1] - cumulative_population[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_area)
}
# 计算基尼系数
gini_area <- calculate_gini(cumulative_population,cumulative_income)
print(paste("Gini area:", gini_area))
# gini_coefficient <- calculate_gini(data$INCTOT)
# gini_coefficient <- calculate_gini(data$INCTOT)
# print(paste("Gini Coefficient:", gini_coefficient))
# gini_coefficient <- calculate_gini(data$INCTOT)
# print(paste("Gini Coefficient:", gini_coefficient))
# gini_coefficient <- calculate_gini(data$INCTOT)
# print(paste("Gini Coefficient:", gini_coefficient))
# gini_coefficient <- calculate_gini(data$INCTOT)
# print(paste("Gini Coefficient:", gini_coefficient))
# 计算基尼系数的函数
calculate_gini <- function(cumulative_population,cumulative_income) {
gini_area <- sum((cumulative_income[-1]) * (cumulative_population[-1] - cumulative_population[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_coefficient)
}
# 计算基尼系数
gini_area <- calculate_gini(cumulative_population,cumulative_income)
print(paste("Gini area:", gini_area))
# 计算基尼系数的函数
calculate_gini <- function(cumulative_population,cumulative_income) {
gini_area <- sum((cumulative_income[-1]) * (cumulative_population[-1] - cumulative_population[-n])) / 2
gini_coefficient <- 1 - 2 * gini_area
return(gini_coefficient)
}
# 计算基尼系数
gini_coefficient <- calculate_gini(cumulative_population,cumulative_income)
print(paste("gini_coefficient:", gini_coefficient))
# 计算基尼系数
lorenz_data$prev_population <- c(0, lorenz_data$cumulative_population[-n])
lorenz_data$prev_income <- c(0, lorenz_data$cumulative_income[-n])
gini_index <- sum((lorenz_data$cumulative_population - lorenz_data$prev_population) *
(lorenz_data$cumulative_income + lorenz_data$prev_income))
gini_coefficient <- 1 - 2 * gini_index
gini_coefficient
# 计算基尼系数的改进版
n <- nrow(lorenz_data)
gini_index <- sum((lorenz_data$cumulative_population[-1] - lorenz_data$cumulative_population[-n]) *
(lorenz_data$cumulative_income[-1] + lorenz_data$cumulative_income[-n]))
gini_coefficient <- 1 - gini_index
gini_coefficient
data7 <- rio::import("caschool.dta")
ggplot(data=data7,aes(x=str,y=testscr))+
geom_point() +
geom_smooth(method = "lm", se = F, color = "blue") +
geom_smooth(method = "loess", se = F, color = "red")
labs(title = "scatter plot", x = "student teacher ratio", y = "testscore")
library(ggplot2)
data7 <- rio::import("caschool.dta")
ggplot(data=data7,aes(x=str,y=testscr))+
geom_point() +
geom_smooth(method = "lm", se = F, color = "blue") +
geom_smooth(method = "loess", se = F, color = "red")
labs(title = "scatter plot", x = "student teacher ratio", y = "testscore")
data7 <- rio::import("wg88.dta")
ggplot(data=data7,aes(x=str,y=testscr))+
geom_point() +
geom_smooth(method = "lm", se = F, color = "blue") +
geom_smooth(method = "loess", se = F, color = "red")
labs(title = "scatter plot", x = "student teacher ratio", y = "testscore")
data7 <- rio::import("wg88.dta")
ggplot(data=data7,aes(x=lgwage,y=schyear))+
geom_point() +
geom_smooth(method = "lm", se = F, color = "blue") +
geom_smooth(method = "loess", se = F, color = "red")
labs(title = "scatter plot", x = "student teacher ratio", y = "testscore")
data7 <- rio::import("caschool.dta")
ggplot(data=data7,aes(x=avginc,y=testscr))+
geom_point() +
geom_smooth(method = "lm", se = F, color = "blue") +
geom_smooth(method = "loess", se = F, color = "red")
labs(title = "scatter plot", x = "student teacher ratio", y = "testscore")
data7 <- rio::import("caschool.dta")
ggplot(data=data7,aes(x=avginc,y=testscr))+
geom_point() +
geom_smooth(method = "lm", se = F, color = "blue") +
geom_smooth(method = "loess", se = F, color = "red")
labs(title = "scatter plot", x = "distric average income", y = "testscore")
data7 <- data7 %>%
mutate(
avginc2=avginc^2,
avginc3=avginc^3
)
library("dplyr")
data7 <- data7 %>%
mutate(
avginc2=avginc^2,
avginc3=avginc^3
)
m2 <- lm(testscr~avginc+avginc2+avginc3, data = data7)
summary(m2)
plot(data7$avginc,data7$testscr,col="blue",pch=16)
abline(lm(testscr~avginc, data= data7, col="black"))
avginc3_fit <- predict(lm(testscr~avginc+avginc2+avginc3, data = data7))
points(data7$avginc,avginc3_fit,col="red",pch=1)
log_fit <- predict(lm(testscr~log(avginc),data=data7))
points(data7$avginc, log_fit, col="green",pch=1)
pf(37.69,2,416)
pf(37.69,2,416, lower.tail = F)
m3 <- lm(testscr ~ log(avginc), data = data7)
summary(m3)
data3 <- rio::import(wg88.dta)
data3 <- rio::import("wg88.dta")
data3 <- rio::import("wg88.dta")
model3 <- lm(lgwg88c ~ schyear+asex+schsex+cp+exper+expsq+minor+
ow2+ow3+ow4+ow5+
oc2+oc3+oc4+
sec1+sec3+sec4+sec5+sec6+sec7+sec8+sec9+sec10+sec11+sec12+
zprvn11+zprvn14+zprvn21+zprvn34+zprvn41+zprvn42+
zprvn44+zprvn53+zprvn62, data = data6)
data3 <- rio::import("wg88.dta")
model3 <- lm(lgwg88c ~ schyear+asex+cp+exper+expsq+minor+
ow2+ow3+ow4+ow5+
oc2+oc3+oc4+
sec1+sec3+sec4+sec5+sec6+sec7+sec8+sec9+sec10+sec11+sec12+
zprvn11+zprvn14+zprvn21+zprvn34+zprvn41+zprvn42+
zprvn44+zprvn53+zprvn62, data = data3)
summary(model3)
m4 <- lm(log(log(testscr) + log(avginc), data = data7))
summary(m4)
data7 <- rio::import("caschool.dta")
m4 <- lm(log(log(testscr) + log(avginc), data = data7))
summary(m4)
m4 <- lm(log(log(testscr) + log(avginc), data = data7))
m4 <- lm(log(testscr) + log(avginc), data = data7)
m4 <- lm(log(testscr) + log(avginc), data = data7)
summary(m4)
m3 <- lm(testscr ~ log(avginc), data = data7)
summary(m3)
m4 <- lm(log(testscr) + log(avginc), data = data7)
m4 <- lm(log(testscr) + log(avginc), data = data7)
m4 <- lm(log(testscr) ~ log(avginc), data = data7)
summary(m4)
data7 <- data7 %>%
mutate(lntestscr=log(testscr))
points(data7$lntestscr, data7$avginc, col="pink",pch=1.5)
plot(data7$avginc,data7$testscr,col="blue",pch=16)
abline(lm(testscr~avginc, data= data7, col="black"))
avginc3_fit <- predict(lm(testscr~avginc+avginc2+avginc3, data = data7))
data7 <- data7 %>%
mutate(lntestscr=log(testscr))
points(data7$lntestscr, data7$avginc, col="pink",pch=1.5)
data7 <- data7 %>%
mutate(lntestscr=log(testscr))
points(data7$lntestscr, data7$avginc, col="pink",pch=1.5)
data7 <- data7 %>%
mutate(lntestscr=log(testscr))
points(data7$lntestscr, data7$avginc, col="pink",pch=1.5)
library(ggplot2)
data7 <- rio::import("caschool.dta")
ggplot(data=data7,aes(x=avginc,y=testscr))+
geom_point() +
geom_smooth(method = "lm", se = F, color = "blue") +
geom_smooth(method = "loess", se = F, color = "red")
labs(title = "scatter plot", x = "distric average income", y = "testscore")
library("dplyr")
data7 <- data7 %>%
mutate(
avginc2=avginc^2,
avginc3=avginc^3
)
m2 <- lm(testscr~avginc+avginc2+avginc3, data = data7)
summary(m2)
plot(data7$avginc,data7$testscr,col="blue",pch=16)
abline(lm(testscr~avginc, data= data7, col="black"))
avginc3_fit <- predict(lm(testscr~avginc+avginc2+avginc3, data = data7))
points(data7$avginc,avginc3_fit,col="red",pch=1)
log_fit <- predict(lm(testscr~log(avginc),data=data7))
points(data7$avginc, log_fit, col="green",pch=1)
pf(37.69,2,416, lower.tail = F)
m3 <- lm(testscr ~ log(avginc), data = data7)
summary(m3)
data3 <- rio::import("wg88.dta")
model3 <- lm(lgwg88c ~ schyear+asex+cp+exper+expsq+minor+
ow2+ow3+ow4+ow5+
oc2+oc3+oc4+
sec1+sec3+sec4+sec5+sec6+sec7+sec8+sec9+sec10+sec11+sec12+
zprvn11+zprvn14+zprvn21+zprvn34+zprvn41+zprvn42+
zprvn44+zprvn53+zprvn62, data = data3)
summary(model3)
m4 <- lm(log(testscr) ~ log(avginc), data = data7)
summary(m4)
m4 <- lm(log(testscr)~log(avginc), data=data7)
summary(m4)
data7 <- data7 %>%
mutate(lntestscr=log(testscr))
points(data7$lntestscr, data7$avginc, col="pink",pch=1.5)
data7 <- data7 %>%
mutate(lntestscr=log(testscr))
points(data7$lntestscr, data7$avginc, col="yellow",pch=1.5)
install.packages("haven")
library(haven)
model<-nls(
testscr~b0*(1-exp(-1*b1*(avginc-b2))),
data = data7,
start = list(b0=720,b1=0.1,b2=10),
summary(model)
)
summary(model)
model<-nls(
testscr~b0*(1-exp(-1*b1*(avginc-b2))),
data = data7,
start = list(b0=720,b1=0.1,b2=10),
)
summary(model)
fuck
nonlfit_curve <- function(x){}
nonlfit_curve <- function(x){
predict(nls(
testscr ~ b0*(1-exp(-1*b1*(avginc-b2))),
data = data7,
start = list(b0=720,b1=0.2,b2=10)
),
newdata = data.frame(avginc = x))
}
curve(nonlfit_curve(x), col = "green", lwd = 2, add = TRUE)
data7 <- rio::import("caschool.dta")
nonlfit_curve <- function(x){
predict(nls(
testscr ~ b0*(1-exp(-1*b1*(avginc-b2))),
data = data7,
start = list(b0=720,b1=0.2,b2=10)
),
newdata = data.frame(avginc = x))
}
curve(nonlfit_curve(x), col = "green", lwd = 2, add = TRUE)
install.packages("quantreg")
library(quantreg)
fit <- rq(testscr~avginc, tau = seq(0.1, 0.9, by = 0.1), data = data7)
summary(fit)
plot(summary_fit, parm = "avginc", main = "coefficient")
summary_fit <- summary(fit)
plot(summary_fit, parm = "avginc", main = "coefficient")
